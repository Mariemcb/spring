
pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "mariemcheikhbrahim/dockerproject:latest" // Remplacez par votre nom d'image Docker
        DOCKER_CREDENTIALS = 'docker-hub-creds' // ID des credentials dans Jenkins
    }

    stages {
        stage("Cleanup Workspace") {
            steps {
                cleanWs()
            }
        }

        stage("Checkout from SCM") {
            steps {
                git branch: "main", url: 'https://github.com/Mariemcb/spring' // Remplacez par votre repo GitHub
            }
        }

        stage('Build') {
            steps {
                echo "Building the Project"
                sh '/usr/local/bin/mvn clean install -X'
            }
        }

         stage('show path') {
            steps {
                echo "Building Docker Image"
                sh 'pwd' 
            }
        }

        stage('Build Docker Image') {
            steps {
                echo "Building Docker Image"
               dir('/Users/mariem/.jenkins/jobs/TP_Docker/workspace') {
                    sh '/usr/local/bin/docker build -t dockerproject:latest .'
                }
            }
        }

stage('Push Docker Image to Docker Hub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-hub-creds', passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USERNAME')]) {
                    echo "Pushing Docker Image to Docker Hub"
                    // Log in to Docker Hub
                    sh 'echo $DOCKER_PASSWORD | /usr/local/bin/docker login -u $DOCKER_USERNAME --password-stdin'
                    
                    // Tag the image for Docker Hub
                    sh '/usr/local/bin/docker tag dockerproject:latest mariemcheikhbrahim/dockerproject:latest'
                    
                    // Push the image to Docker Hub
                    sh '/usr/local/bin/docker push mariemcheikhbrahim/dockerproject:latest'
                }
            }
        }

        
    }
}


